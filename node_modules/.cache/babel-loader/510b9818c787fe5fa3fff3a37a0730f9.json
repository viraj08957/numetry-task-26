{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"../rect/copy\"));\n\nvar _crop = _interopRequireDefault(require(\"../rect/crop\"));\n\nvar _slice = _interopRequireDefault(require(\"../block/slice\"));\n\nvar _height = _interopRequireDefault(require(\"../block/height\"));\n\nvar _truncate = _interopRequireDefault(require(\"../block/truncate\"));\n\nvar _layoutParagraph = _interopRequireDefault(require(\"./layoutParagraph\"));\n\nvar _sliceAtHeight = _interopRequireDefault(require(\"../block/sliceAtHeight\"));\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */\n\n\nvar typesetter = function typesetter(engines, options, container, attributedStrings) {\n  var blocks = [];\n  var paragraphs = [].concat(attributedStrings);\n  var maxLines = R.propOr(Infinity, 'maxLines', container);\n  var truncateEllipsis = container.truncateMode === 'ellipsis';\n  var linesCount = maxLines;\n  var paragraphRect = (0, _copy.default)(container);\n  var nextParagraph = paragraphs.shift();\n\n  while (linesCount > 0 && nextParagraph) {\n    var block = (0, _layoutParagraph.default)(engines, options)(paragraphRect, nextParagraph);\n    var slicedBlock = (0, _slice.default)(linesCount, block);\n    var linesHeight = (0, _height.default)(slicedBlock);\n    var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n    linesCount -= slicedBlock.length;\n\n    if (paragraphRect.height >= linesHeight) {\n      blocks.push(R.when(R.always(shouldTruncate), _truncate.default)(slicedBlock));\n      paragraphRect = (0, _crop.default)(linesHeight, paragraphRect);\n      nextParagraph = paragraphs.shift();\n    } else {\n      blocks.push(R.compose(_truncate.default, (0, _sliceAtHeight.default)(paragraphRect.height))(slicedBlock));\n      break;\n    }\n  }\n\n  return blocks;\n};\n\nvar _default = R.curryN(4, typesetter);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Viraj/Desktop/task 26/numetry-task-26/node_modules/@react-pdf/textkit/lib/layout/typesetter.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_copy","_crop","_slice","_height","_truncate","_layoutParagraph","_sliceAtHeight","typesetter","engines","options","container","attributedStrings","blocks","paragraphs","concat","maxLines","propOr","Infinity","truncateEllipsis","truncateMode","linesCount","paragraphRect","nextParagraph","shift","block","slicedBlock","linesHeight","shouldTruncate","length","height","push","when","always","compose","_default","curryN"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"../rect/copy\"));\n\nvar _crop = _interopRequireDefault(require(\"../rect/crop\"));\n\nvar _slice = _interopRequireDefault(require(\"../block/slice\"));\n\nvar _height = _interopRequireDefault(require(\"../block/height\"));\n\nvar _truncate = _interopRequireDefault(require(\"../block/truncate\"));\n\nvar _layoutParagraph = _interopRequireDefault(require(\"./layoutParagraph\"));\n\nvar _sliceAtHeight = _interopRequireDefault(require(\"../block/sliceAtHeight\"));\n\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */\nvar typesetter = function typesetter(engines, options, container, attributedStrings) {\n  var blocks = [];\n  var paragraphs = [].concat(attributedStrings);\n  var maxLines = R.propOr(Infinity, 'maxLines', container);\n  var truncateEllipsis = container.truncateMode === 'ellipsis';\n  var linesCount = maxLines;\n  var paragraphRect = (0, _copy.default)(container);\n  var nextParagraph = paragraphs.shift();\n\n  while (linesCount > 0 && nextParagraph) {\n    var block = (0, _layoutParagraph.default)(engines, options)(paragraphRect, nextParagraph);\n    var slicedBlock = (0, _slice.default)(linesCount, block);\n    var linesHeight = (0, _height.default)(slicedBlock);\n    var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n    linesCount -= slicedBlock.length;\n\n    if (paragraphRect.height >= linesHeight) {\n      blocks.push(R.when(R.always(shouldTruncate), _truncate.default)(slicedBlock));\n      paragraphRect = (0, _crop.default)(linesHeight, paragraphRect);\n      nextParagraph = paragraphs.shift();\n    } else {\n      blocks.push(R.compose(_truncate.default, (0, _sliceAtHeight.default)(paragraphRect.height))(slicedBlock));\n      break;\n    }\n  }\n\n  return blocks;\n};\n\nvar _default = R.curryN(4, typesetter);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}