{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _utils = require(\"./utils\");\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\n\nvar processBorders = function processBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = (0, _utils.castFloat)(match[1] || value);\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar _default = processBorders;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Viraj/Desktop/task 26/resume-builder/node_modules/@react-pdf/stylesheet/lib/borders.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","_utils","BORDER_SHORTHAND_REGEX","matchBorderShorthand","match","processBorders","key","value","color","style","width","castFloat","_ref","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _utils = require(\"./utils\");\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\n\nvar processBorders = function processBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = (0, _utils.castFloat)(match[1] || value);\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar _default = processBorders;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}