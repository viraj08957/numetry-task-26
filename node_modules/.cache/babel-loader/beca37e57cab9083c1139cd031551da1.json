{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nvar _save = _interopRequireDefault(require(\"../operations/save\"));\n\nvar _restore = _interopRequireDefault(require(\"../operations/restore\"));\n\nvar _clipNode = _interopRequireDefault(require(\"../operations/clipNode\"));\n\nvar parseColor = function parseColor(hex) {\n  var parsed = _colorString.default.get(hex);\n\n  var value = _colorString.default.to.hex(parsed.value.slice(0, 3));\n\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  if (node.box && node.style.backgroundColor) {\n    var _node$style;\n\n    var _node$box = node.box,\n        top = _node$box.top,\n        left = _node$box.left,\n        width = _node$box.width,\n        height = _node$box.height;\n    var color = parseColor(node.style.backgroundColor);\n    var opacity = R.defaultTo(color.opacity, (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity);\n    ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n  }\n\n  return node;\n};\n\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n\n  if (hasBackground) {\n    (0, _save.default)(ctx, node);\n    (0, _clipNode.default)(ctx, node);\n    drawBackground(ctx, node);\n    (0, _restore.default)(ctx, node);\n  }\n\n  return node;\n};\n\nvar _default = R.curryN(2, renderBackground);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Viraj/Desktop/task 26/numetry-task-26/node_modules/@react-pdf/render/lib/primitives/renderBackground.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_colorString","_save","_restore","_clipNode","parseColor","hex","parsed","get","value","to","slice","opacity","drawBackground","ctx","node","box","style","backgroundColor","_node$style","_node$box","top","left","width","height","color","defaultTo","fillOpacity","fillColor","rect","fill","renderBackground","_node$style2","hasBackground","_default","curryN"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nvar _save = _interopRequireDefault(require(\"../operations/save\"));\n\nvar _restore = _interopRequireDefault(require(\"../operations/restore\"));\n\nvar _clipNode = _interopRequireDefault(require(\"../operations/clipNode\"));\n\nvar parseColor = function parseColor(hex) {\n  var parsed = _colorString.default.get(hex);\n\n  var value = _colorString.default.to.hex(parsed.value.slice(0, 3));\n\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  if (node.box && node.style.backgroundColor) {\n    var _node$style;\n\n    var _node$box = node.box,\n        top = _node$box.top,\n        left = _node$box.left,\n        width = _node$box.width,\n        height = _node$box.height;\n    var color = parseColor(node.style.backgroundColor);\n    var opacity = R.defaultTo(color.opacity, (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity);\n    ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n  }\n\n  return node;\n};\n\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n\n  if (hasBackground) {\n    (0, _save.default)(ctx, node);\n    (0, _clipNode.default)(ctx, node);\n    drawBackground(ctx, node);\n    (0, _restore.default)(ctx, node);\n  }\n\n  return node;\n};\n\nvar _default = R.curryN(2, renderBackground);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}