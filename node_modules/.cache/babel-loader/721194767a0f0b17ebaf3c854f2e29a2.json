{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _utils = require(\"./utils\");\n\nvar TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\nvar matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nvar transformOffsetKeywords = function transformOffsetKeywords(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return (0, _utils.castFloat)(value);\n  }\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\n\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\n\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n}; // Transforms shorthand transformOrigin values\n\n\nvar processTransformOrigin = function processTransformOrigin(key, value) {\n  var match = matchTransformOrigin(\"\" + value);\n  if (!match) return value;\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: transformOffsetKeywords(pair[0]),\n    transformOriginY: transformOffsetKeywords(pair[1])\n  };\n};\n\nvar _default = processTransformOrigin;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Viraj/Desktop/task 26/numetry-task-26/node_modules/@react-pdf/stylesheet/lib/transformOrigin.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","_utils","TRANSFORM_ORIGIN_REGEX","matchTransformOrigin","match","transformOffsetKeywords","value","castFloat","Y_AXIS_SHORTHANDS","top","bottom","sortTransformOriginPair","a","b","getTransformOriginPair","values","length","pair","sort","processTransformOrigin","key","transformOriginX","transformOriginY","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,MAAM,GAAGL,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIM,sBAAsB,GAAG,mEAA7B;AACA,IAAIC,oBAAoB,GAAGH,CAAC,CAACI,KAAF,CAAQF,sBAAR,CAA3B;;AAEA,IAAIG,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AACpE,UAAQA,KAAR;AACE,SAAK,KAAL;AACA,SAAK,MAAL;AACE,aAAO,IAAP;;AAEF,SAAK,OAAL;AACA,SAAK,QAAL;AACE,aAAO,MAAP;;AAEF,SAAK,QAAL;AACE,aAAO,KAAP;;AAEF;AACE,aAAO,CAAC,GAAGL,MAAM,CAACM,SAAX,EAAsBD,KAAtB,CAAP;AAbJ;AAeD,CAhBD;;AAkBA,IAAIE,iBAAiB,GAAG;AACtBC,EAAAA,GAAG,EAAE,IADiB;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAxB;;AAKA,IAAIC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,CAAjC,EAAoCC,CAApC,EAAuC;AACnE,MAAIL,iBAAiB,CAACI,CAAD,CAArB,EAA0B,OAAO,CAAP;AAC1B,MAAIJ,iBAAiB,CAACK,CAAD,CAArB,EAA0B,OAAO,CAAC,CAAR;AAC1B,SAAO,CAAP;AACD,CAJD;;AAMA,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,MAAhC,EAAwC;AACnE,MAAI,CAACA,MAAD,IAAWA,MAAM,CAACC,MAAP,KAAkB,CAAjC,EAAoC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAP;AACpC,MAAIC,IAAI,GAAGF,MAAM,CAACC,MAAP,KAAkB,CAAlB,GAAsB,CAACD,MAAM,CAAC,CAAD,CAAP,EAAY,QAAZ,CAAtB,GAA8CA,MAAzD;AACA,SAAOE,IAAI,CAACC,IAAL,CAAUP,uBAAV,CAAP;AACD,CAJD,C,CAIG;;;AAGH,IAAIQ,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,GAAhC,EAAqCd,KAArC,EAA4C;AACvE,MAAIF,KAAK,GAAGD,oBAAoB,CAAC,KAAKG,KAAN,CAAhC;AACA,MAAI,CAACF,KAAL,EAAY,OAAOE,KAAP;AACZ,MAAIW,IAAI,GAAGH,sBAAsB,CAACV,KAAD,CAAjC;AACA,SAAO;AACLiB,IAAAA,gBAAgB,EAAEhB,uBAAuB,CAACY,IAAI,CAAC,CAAD,CAAL,CADpC;AAELK,IAAAA,gBAAgB,EAAEjB,uBAAuB,CAACY,IAAI,CAAC,CAAD,CAAL;AAFpC,GAAP;AAID,CARD;;AAUA,IAAIM,QAAQ,GAAGJ,sBAAf;AACAtB,OAAO,CAACE,OAAR,GAAkBwB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _utils = require(\"./utils\");\n\nvar TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\nvar matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nvar transformOffsetKeywords = function transformOffsetKeywords(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return (0, _utils.castFloat)(value);\n  }\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\n\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\n\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n}; // Transforms shorthand transformOrigin values\n\n\nvar processTransformOrigin = function processTransformOrigin(key, value) {\n  var match = matchTransformOrigin(\"\" + value);\n  if (!match) return value;\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: transformOffsetKeywords(pair[0]),\n    transformOriginY: transformOffsetKeywords(pair[1])\n  };\n};\n\nvar _default = processTransformOrigin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}