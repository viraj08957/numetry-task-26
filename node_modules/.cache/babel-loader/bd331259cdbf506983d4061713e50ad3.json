{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _layoutText = _interopRequireDefault(require(\"./layoutText\"));\n\nvar _linesWidth = _interopRequireDefault(require(\"./linesWidth\"));\n\nvar _linesHeight = _interopRequireDefault(require(\"./linesHeight\"));\n/* eslint-disable no-param-reassign */\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\n\n\nvar measureText = function measureText(page, node, fontStore, width, widthMode, height) {\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = (0, _layoutText.default)(node, width, height, fontStore);\n    return {\n      height: (0, _linesHeight.default)(node)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = (0, _layoutText.default)(node, width, height, fontStore);\n    return {\n      height: (0, _linesHeight.default)(node),\n      width: Math.min(width, (0, _linesWidth.default)(node))\n    };\n  }\n\n  return {};\n};\n\nvar _default = R.curryN(7, measureText);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Viraj/Desktop/task 26/numetry-task-26/node_modules/@react-pdf/layout/lib/text/measureText.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_yoga","_layoutText","_linesWidth","_linesHeight","measureText","page","node","fontStore","width","widthMode","height","MEASURE_MODE_EXACTLY","lines","MEASURE_MODE_AT_MOST","Math","min","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,KAAK,GAAGP,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAlC;;AAEA,IAAIO,WAAW,GAAGR,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIQ,WAAW,GAAGT,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIS,YAAY,GAAGV,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,SAAnD,EAA8DC,MAA9D,EAAsE;AACtF,MAAID,SAAS,KAAKT,KAAK,CAACF,OAAN,CAAca,oBAAhC,EAAsD;AACpD,QAAI,CAACL,IAAI,CAACM,KAAV,EAAiBN,IAAI,CAACM,KAAL,GAAa,CAAC,GAAGX,WAAW,CAACH,OAAhB,EAAyBQ,IAAzB,EAA+BE,KAA/B,EAAsCE,MAAtC,EAA8CH,SAA9C,CAAb;AACjB,WAAO;AACLG,MAAAA,MAAM,EAAE,CAAC,GAAGP,YAAY,CAACL,OAAjB,EAA0BQ,IAA1B;AADH,KAAP;AAGD;;AAED,MAAIG,SAAS,KAAKT,KAAK,CAACF,OAAN,CAAce,oBAAhC,EAAsD;AACpD,QAAI,CAACP,IAAI,CAACM,KAAV,EAAiBN,IAAI,CAACM,KAAL,GAAa,CAAC,GAAGX,WAAW,CAACH,OAAhB,EAAyBQ,IAAzB,EAA+BE,KAA/B,EAAsCE,MAAtC,EAA8CH,SAA9C,CAAb;AACjB,WAAO;AACLG,MAAAA,MAAM,EAAE,CAAC,GAAGP,YAAY,CAACL,OAAjB,EAA0BQ,IAA1B,CADH;AAELE,MAAAA,KAAK,EAAEM,IAAI,CAACC,GAAL,CAASP,KAAT,EAAgB,CAAC,GAAGN,WAAW,CAACJ,OAAhB,EAAyBQ,IAAzB,CAAhB;AAFF,KAAP;AAID;;AAED,SAAO,EAAP;AACD,CAjBD;;AAmBA,IAAIU,QAAQ,GAAGjB,CAAC,CAACkB,MAAF,CAAS,CAAT,EAAYb,WAAZ,CAAf;;AAEAR,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _layoutText = _interopRequireDefault(require(\"./layoutText\"));\n\nvar _linesWidth = _interopRequireDefault(require(\"./linesWidth\"));\n\nvar _linesHeight = _interopRequireDefault(require(\"./linesHeight\"));\n\n/* eslint-disable no-param-reassign */\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nvar measureText = function measureText(page, node, fontStore, width, widthMode, height) {\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = (0, _layoutText.default)(node, width, height, fontStore);\n    return {\n      height: (0, _linesHeight.default)(node)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = (0, _layoutText.default)(node, width, height, fontStore);\n    return {\n      height: (0, _linesHeight.default)(node),\n      width: Math.min(width, (0, _linesWidth.default)(node))\n    };\n  }\n\n  return {};\n};\n\nvar _default = R.curryN(7, measureText);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}